#!/bin/sh
. "$PROJECT_PATH/_env-setup.sh"
# debug_file_msg "$(current_basename)"

line_break
heading "WORDPRESS .ENV FILE"

# SOURCE LEMP STACK .ENV
if [[ -z "${STACK_NAME}" ]]; then
	warning_msg "${C_Yellow}\$STACK_NAME${C_Reset} is not defined, please select a LEMP stack."
	# Select a LEMP stack using the new function, defines ${STACK_NAME}
	select_lemp_stack
else
	debug_success_msg "${C_Yellow}\$STACK_NAME${C_Reset} is defined as '${C_Yellow}${STACK_NAME}${C_Reset}'. Proceeding..."
fi

source_lemp_stack_env ${STACK_NAME}

#
# WORDPRESS: ENV FILE
# Check if the .env file already exists
if [ -f "$WORDPRESS_ENV_FILE" ]; then
	success_msg "$WORDPRESS_LEMP_CONTAINER_PATH/.env file already exists."
else
	status_msg "üîç ${C_Reset}$WORDPRESS_LEMP_CONTAINER_PATH/.env file ${C_Red}not found."
	line_break
	status_msg "   ${C_Yellow}Generating with dynamic variables..."
	TIMESTAMP=$(env TZ="$OS_TZ" date +"%Y-%m-%d_%I%M%S_%p_%Z")

	cat <<EOL >"$WORDPRESS_ENV_FILE"
# ENVIRONMENT VARIABLES
# Created $TIMESTAMP
#
# MULTISTACK
ADMIN_EMAIL="${ADMIN_EMAIL}"
PROJECT_PATH="${PROJECT_PATH}"
PROJECT_NAME="${PROJECT_NAME}"
STACKS_PATH="${STACKS_PATH}"
SCRIPTS_PATH="${SCRIPTS_PATH}"
FUNCTIONS_PATH="${FUNCTIONS_PATH}"
#
# LEMP
DB_HOST_NAME="${DB_HOST_NAME}"
LEMP_NETWORK_NAME="${LEMP_NETWORK_NAME}"
#
# WORDPRESS DIRECTORY ON HOST MACHINE
WORDPRESS_LEMP_CONTAINER_PATH="${WORDPRESS_LEMP_CONTAINER_PATH}"
WORDPRESS_DIR="${WORDPRESS_DIR}"
WORDPRESS_PUBLIC_DIR="${WORDPRESS_PUBLIC_DIR}"
WORDPRESS_PUBLIC_PATH="${WORDPRESS_PUBLIC_PATH}"
#
# WORDPRESS DOCKER CONTAINER:
WORDPRESS_IMAGE="${WORDPRESS_IMAGE}"
WORDPRESS_CONTAINER_NAME="${WORDPRESS_CONTAINER_NAME}"
WORDPRESS_SERVICE_CONTAINER_NAME="${WORDPRESS_SERVICE_CONTAINER_NAME}"
WORDPRESS_CONTAINER_PATH="${WORDPRESS_CONTAINER_PATH}"
#
# WORDPRESS DOMAIN
WORDPRESS_SUBDOMAIN_NAME="${WORDPRESS_SUBDOMAIN_NAME}"
WORDPRESS_SUBDOMAIN="${WORDPRESS_SUBDOMAIN}"
WORDPRESS_PHPMYADMIN_SUBDOMAIN="${PHPMYADMIN_SUBDOMAIN}"
#
# WORDPRESS CONTAINER CONNECTION TO "${LEMP_DIR}>${WORDPRESS_DB_HOST}" DATABASE
WORDPRESS_DB_HOST="${WORDPRESS_DB_HOST}"
WORDPRESS_DB_NAME="${WORDPRESS_DB_NAME}"
WORDPRESS_DB_USER="${WORDPRESS_DB_USER}"
WORDPRESS_DB_PASSWORD="${WORDPRESS_DB_PASSWORD}"
WORDPRESS_URL="${WORDPRESS_URL}"
WORDPRESS_TITLE="${WORDPRESS_DIR}"
WORDPRESS_TABLE_PREFIX="${WORDPRESS_TABLE_PREFIX}"
WORDPRESS_ADMIN_USER_EMAIL="${WORDPRESS_ADMIN_USER_EMAIL}"
WORDPRESS_ADMIN_USER="${WORDPRESS_ADMIN_USER}"
WORDPRESS_ADMIN_USER_PASSWORD="${WORDPRESS_ADMIN_USER_PASSWORD}"
#
# NGINX FILE (not used)
WORDPRESS_NGINX_SERVICE_CONTAINER_NAME="${WORDPRESS_NGINX_SERVICE_CONTAINER_NAME}"
WORDPRESS_NGINX_PATH="${WORDPRESS_NGINX_PATH}"
WORDPRESS_NGINX_CONF_PATH="${WORDPRESS_NGINX_CONF_PATH}"
WORDPRESS_NGINX_CONF_FILE="${WORDPRESS_NGINX_CONF_FILE}"
#
# ENV FILE
WORDPRESS_ENV_FILE="${WORDPRESS_ENV_FILE}"
#
# DOCKER COMPOSE FILE
WORDPRESS_DOCKER_COMPOSE_YML="${WORDPRESS_DOCKER_COMPOSE_YML}"
EOL

	cat_msg "$WORDPRESS_ENV_FILE" # Display the .env file content
	line_break

	# Debugging pwd
	# echo "$WORDPRESS_LEMP_CONTAINER_PATH"

	if [ -f "$WORDPRESS_ENV_FILE" ]; then
		success_msg "${WORDPRESS_LEMP_CONTAINER_PATH}/.env file created successfully"
	else
		error_msg "creating ${WORDPRESS_LEMP_CONTAINER_PATH}/.env file created, create manually or try again"
	fi
fi

###############

# Verify .env variables before starting the container
sh "$WORDPRESS_LEMP_CONTAINER_PATH/.env"

#
# CREATE LEMP STACK - WORDPRESS CONTAINER
sh "${SCRIPTS_PATH}/lemp/wordpress/create-wordpress-13-traefik-config.sh"
